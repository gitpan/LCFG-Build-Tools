
# Details for this project

# The entries with names which do *not* start with LCFG_ or CPACK_ are
# for compatibility only, they are now deprecated.

[%+ FOREACH key IN mapping.keys.sort %]
[% SET attr = mapping.item(key) %]
[% SET value = spec.${attr} %]
SET([% key +%] "[%+ value.list.join(', ') %]")

[%+ END %]

# On Linux these variables allow packagers to make decisions based on
# the platform

IF(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
FIND_PROGRAM(LSB lsb_release)

IF(LSB)

  EXECUTE_PROCESS(COMMAND ${LSB} -s -v
                  OUTPUT_VARIABLE LSB_VERSION
                  OUTPUT_STRIP_TRAILING_WHITESPACE)
  EXECUTE_PROCESS(COMMAND ${LSB} -s -i
                  OUTPUT_VARIABLE DISTRIB_ID
                  OUTPUT_STRIP_TRAILING_WHITESPACE)
  EXECUTE_PROCESS(COMMAND ${LSB} -s -d
                  OUTPUT_VARIABLE DISTRIB_DESCRIPTION
                  OUTPUT_STRIP_TRAILING_WHITESPACE)
  EXECUTE_PROCESS(COMMAND ${LSB} -s -r
                  OUTPUT_VARIABLE DISTRIB_RELEASE
                  OUTPUT_STRIP_TRAILING_WHITESPACE)
  EXECUTE_PROCESS(COMMAND ${LSB} -s -c
                  OUTPUT_VARIABLE DISTRIB_CODENAME
                  OUTPUT_STRIP_TRAILING_WHITESPACE)

IF(${DISTRIB_ID} STREQUAL "FedoraCore")
  SET(OS_RELEASE ${DISTRIB_RELEASE})
  SET(OS_VERSION "fc${OS_RELEASE}")
ENDIF()

IF(${DISTRIB_ID} STREQUAL "ScientificSL")
  SET(OS_RELEASE ${DISTRIB_RELEASE})
  string(REGEX REPLACE "^([0-9]+).*" "\\1" OS_RELEASE ${OS_RELEASE})
  SET(OS_VERSION "sl${OS_RELEASE}")
ENDIF()

ENDIF(LSB)

# Architecture-specific installation locations, this is for
# Redhat-style systems and would need to be overridden for Debian
# systems.

IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
  SET(OS_VERSION "${OS_VERSION}_64")

  SET(LIBDIR "/usr/lib64" CACHE PATH "Library installation location")
  SET(LIBSECURITYDIR "/lib64/security" CACHE PATH "PAM module installation location")
ELSE(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
  SET(LIBDIR "/usr/lib" CACHE PATH "Library installation location")
  SET(LIBSECURITYDIR "/lib/security" CACHE PATH "PAM module installation location")
ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")

SET(HAS_PROC "yes")
SET(BOOTCOMP "boot")

ENDIF(${CMAKE_SYSTEM_NAME} STREQUAL "Linux")

IF(${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")

SET(HAS_PROC "no")
SET(BOOTCOMP "macboot")

SET(OSX_VERSION ${DARWIN_MINOR_VERSION})
                
ENDIF(${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")

# Find the location of the perl executable

FIND_PACKAGE(Perl)
IF(PERL_FOUND)
  SET(PERL ${PERL_EXECUTABLE})
ELSE(PERL_FOUND)
  MESSAGE(FATAL_ERROR "Failed to find perl")
ENDIF(PERL_FOUND)

SET(PERL_INSTALLDIRS "site" CACHE STRING "Perl installation locations")

IF(${PERL_INSTALLDIRS} STREQUAL "vendor")
  SET(PERL_ARCHDIR "installvendorarch")
  SET(PERL_LIBDIR "installvendorlib")
ELSE(${PERL_INSTALLDIRS} STREQUAL "vendor")
  SET(PERL_ARCHDIR "installsitearch")
  SET(PERL_LIBDIR "installsitelib")
ENDIF(${PERL_INSTALLDIRS} STREQUAL "vendor")

EXECUTE_PROCESS(COMMAND ${PERL_EXECUTABLE}
                -MConfig -e "print \"\$Config{${PERL_ARCHDIR}}\""
                OUTPUT_VARIABLE PERL_ARCHDIR)
EXECUTE_PROCESS(COMMAND ${PERL_EXECUTABLE}
                -MConfig -e "print \"\$Config{${PERL_LIBDIR}}\""
                OUTPUT_VARIABLE PERL_LIBDIR)

# Find the location of the bash executable

FIND_PROGRAM(SHELL bash)

# Compatibility stuff

FIND_PROGRAM(EGREP egrep)
FIND_PROGRAM(SED sed)
FIND_PROGRAM(SORT sort)

SET(LCFGOS ${CMAKE_SYSTEM_NAME})

SET(LCFGARCH ${CMAKE_SYSTEM_PROCESSOR})

STRING( REGEX REPLACE "^i[1-6]86$" "i386" LCFGARCH ${LCFGARCH} )

# Variables describing the standard LCFG layout

[%+ FOREACH key IN lcfgcfg.keys %]
[% SET type = lcfgcfg.item(key).item("type") %]
SET([% key +%] [%+ lcfgcfg.item(key).item("value") %] CACHE [% IF type == "directory" %]PATH[% ELSIF type == "file" %]FILEPATH[% ELSE %][% type | upper %][% END %] "[% lcfgcfg.item(key).item("description") %]")

[%+ END %]

SET(CONFIGDIR "${LCFGCONF}/${LCFG_NAME}")

SET(ICONDIR "${LCFGDATA}/${LCFG_NAME}/icons")

SET(SCRIPTDIR "${LCFGDATA}/${LCFG_NAME}/scripts")

SET(LCFG_TMPLDIR "${LCFGDATA}/${LCFG_NAME}")

SET(MSG " ** Generated file : do not edit **")

[%+ INCLUDE build.cmake.tt %]
